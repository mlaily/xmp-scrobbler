--- orig/data.cpp	Sun Mar 18 22:30:52 2007
+++ my/data.cpp	Thu Jan  7 01:14:02 2010
@@ -133,6 +133,69 @@ bool XMP_ExtractTags_Other(const char *data, char *art
 	return true;
 }
 
+extern bool XMP_IsRadio;               /* xmp-scrobbler.cpp */ 
+extern bool RadioScrobbling;           /*                   */
+
+/* Function of extracting datas from Internet radio string */
+bool XMP_ExtractTags_NetRadio(const char *data, char *artist, char *title, char *album)
+{
+     /* Scrobbling of radio streams is disabled by user */
+     if(!RadioScrobbling)
+        return false;
+        
+     string tmp(data), track;
+     char char_tmp[TAG_FIELD_SIZE];
+     char *char_tmp_p = &char_tmp[0];
+     char *t;
+     int i, j;
+     DWORD find_me;
+         
+     /* XXX Let's think that:
+      * 1) Name field appears only in NetRadio strings;
+      * 2) Name field is always filled as other do.
+      * Never checked both of these thougs, as i currently
+      * listen only few stations which does 
+      */
+     if(!XMP_GetTagField(tmp, "\nname\t", album))
+         return false;
+     /* Array initialization */
+     memset(char_tmp, 0, TAG_FIELD_SIZE);
+
+     /* OGG streams workaround (and other that have valid separated fields) */
+     if(XMP_ExtractTags_Other(data, artist, title, char_tmp)) {
+         return XMP_IsRadio = true;
+     }
+     /* Although char_tmp willn't filled, it's better to do this safety measure */
+     while(*(char_tmp_p++))
+         *char_tmp_p = 0;
+
+     /* XXX Let's presume that Track field always contains
+      * track title (or artist + title) instead of anyhing else
+      */   
+     if(!XMP_GetTagField(tmp, "\ntrack\t", char_tmp))
+         return false;
+     
+     track += char_tmp;
+
+     find_me = track.find(" - ");         
+     /* XXX No artist? */
+     if(find_me == string::npos)
+         return false;
+
+     /* Split title and artist from Track 
+      * Pure C jokes :D */
+     i = track.length(); j = find_me + 3;
+     t = (char *) malloc(i - j);
+     t = &char_tmp[j];
+     memmove(artist, char_tmp, find_me);
+     memmove(title, t, i);
+     free(t); 
+     t = NULL;
+     
+     /* This is radio now! */
+     return XMP_IsRadio = true;
+}
+
 bool XMP_ExtractTags_MBID(const char *data, char *mb)
 {
 	//string block = XMP_GetDataBlock( "ID3v2", data );
